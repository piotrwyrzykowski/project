version: '3'
services:

  backend:
    restart: always
    depends_on:
    - redis
    container_name: backend
    build:
      context: ../back
    ports:
    - "5001:5001"
    networks:
    - docker_network
    environment:
    - PYTHONUNBUFFERED=0

  frontend:
    depends_on:
      - backend
    container_name: frontend
    restart: always
    build:
      context: ../front     
    ports:
    - "5000:5000"
    networks:
    - docker_network

  grafana:
    image: grafana/grafana:8.4.6
    container_name: grafana
    restart: always
    depends_on: 
      - influxdb
    ports:
      - 3000:3000
    networks:
      - docker_network
    volumes:
      - grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ALLOW_EMBEDDING=true

  influxdb:
    image: influxdb:2.2.0-alpine
    container_name: influxdb
    restart: always
    ports:
      - 8086:8086
    networks:
      - docker_network
    volumes:
      - influxdb:/var/lib/influxdb
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=password
      - DOCKER_INFLUXDB_INIT_ORG=pwr
      - DOCKER_INFLUXDB_INIT_BUCKET=grafana
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=mytoken 

  redis:
    container_name: redis
    restart: always
    image: "redislabs/rejson:2.0.8"
    volumes:
        - redis:/data
    ports:
      - "6379:6379"
    networks:
    - docker_network

networks:
  docker_network:
    driver: bridge
volumes:
  redis: {}
  grafana: {}
  influxdb: {}