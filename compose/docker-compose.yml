version: '3.2'
services:

  backend:
    restart: always
    depends_on:
    - redis
    container_name: backend
    build:
      context: ../back
    ports:
    - "5001:5001"
    networks:
    - docker_network

  frontend:
    depends_on:
      - backend
    container_name: frontend
    restart: always
    build:
      context: ../front     
    ports:
    - "5000:5000"
    networks:
    - docker_network

  grafana:
    image: grafana/grafana:8.4.4
    container_name: grafana
    restart: always
    depends_on: 
      - influxdb
    user: 0:0
    ports:
      - 3000:3000
    networks:
      - docker_network
    volumes:
      - type: bind
        source: ../volumes/grafana
        target: /var/lib/grafana        
    environment:
      - GF_SECURITY_ALLOW_EMBEDDING=true

  influxdb:
    image: influxdb:2.2.0-alpine
    container_name: influxdb
    restart: always
    ports:
      - 8086:8086
    networks:
      - docker_network
    volumes:
      - type: bind
        source: ../volumes/influxdb/data
        target: /var/lib/influxdb2
      - type: bind
        source: ../volumes/influxdb/config
        target: /etc/influxdb2     
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=${influx_username}
      - DOCKER_INFLUXDB_INIT_PASSWORD=${influx_password}
      - DOCKER_INFLUXDB_INIT_ORG=${influx_org}
      - DOCKER_INFLUXDB_INIT_BUCKET=${influx_bucket}
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${influx_token}
      - DOCKER_INFLUXDB_INIT_CLI_CONFIG_NAME=default
      - DOCKER_INFLUXDB_CONFIG_PATH=/root/influxdb2/config.toml

  redis:
    container_name: redis
    restart: always
    image: "redislabs/rejson:2.0.8"
    volumes:
      - type: bind
        source: ../volumes/redis
        target: /data
    ports:
      - "6379:6379"
    networks:
    - docker_network

networks:
  docker_network:
    driver: bridge
